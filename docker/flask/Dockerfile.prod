# multi-stage docker files
# https://pmac.io/2019/02/multi-stage-dockerfile-and-python-virtualenv/

# STAGE 1
#
# build image
#
FROM python:3.6-stretch AS builder

# Always set a working directory
WORKDIR /app
# Sets utf-8 encoding for Python et al
ENV LANG=C.UTF-8
# Turns off writing .pyc files; superfluous on an ephemeral container.
ENV PYTHONDONTWRITEBYTECODE=1
# Seems to speed things up
ENV PYTHONUNBUFFERED=1

# Ensures that the python and pip executables used
# in the image will be those from our virtualenv.
ENV PATH="/venv/bin:$PATH"

# from https://launchpad.net/~mario-mariomedina/+archive/ubuntu/talib/+build/2020616
RUN wget https://launchpad.net/~mario-mariomedina/+archive/ubuntu/talib/+build/2020616/+files/libta-lib0_0.4.0-maverick1_amd64.deb && \
   dpkg -i libta-lib0_0.4.0-maverick1_amd64.deb
RUN wget https://launchpad.net/~mario-mariomedina/+archive/ubuntu/talib/+build/2020616/+files/ta-lib0-dev_0.4.0-maverick1_amd64.deb && \
   dpkg -i ta-lib0-dev_0.4.0-maverick1_amd64.deb

# Install OS package dependencies.
# Do all of this in one RUN to limit final image size.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gettext git build-essential libxml2-dev libxslt-dev && \
    rm -rf /var/lib/apt/lists/*

# Setup the virtualenv
RUN python -m venv /venv

COPY ./requirements.txt requirements.txt
RUN pip install -U pip $(cat requirements.txt | grep ^numpy | cut -d ' ' -f 1)
RUN pip install --no-cache-dir -r requirements.txt

########
# STAGE 2
#
# Smaller official Debian-based Python image
#
FROM python:3.6-slim-stretch AS app

# Extra python env
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PATH="/venv/bin:$PATH"

WORKDIR /app

# do all of this in one RUN to limit final image sizeu
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gettext libxslt1.1 wget && \
    rm -rf /var/lib/apt/lists/*

# from https://launchpad.net/~mario-mariomedina/+archive/ubuntu/talib/+build/2020616
RUN wget https://launchpad.net/~mario-mariomedina/+archive/ubuntu/talib/+build/2020616/+files/libta-lib0_0.4.0-maverick1_amd64.deb && \
   dpkg -i libta-lib0_0.4.0-maverick1_amd64.deb && \
   rm libta-lib0_0.4.0-maverick1_amd64.deb

# copy in Python environment
COPY --from=builder /venv /venv

# copy in the rest of the app
COPY ./celery_app.py /app/celery_app.py
COPY ./wsgi.py /app/wsgi.py
COPY ./docker/flask/Procfile /app/Procfile
COPY ./unchained_config.py /app/unchained_config.py
COPY ./backend /app/backend
COPY ./templates /app/templates
COPY ./bundles /app/bundles
COPY ./db /app/db

CMD honcho start -f /app/Procfile flask
